import java.util.*;

public class lab11_3 {

	public static void main(String[] args) {
		Scanner kb = new Scanner (System.in);
		
		int M = kb.nextInt();
		int N = kb.nextInt();
		int P = kb.nextInt();
		String[] s= new String[M];
		
		for(int i=0;i<M;i++) {
			s[i] = kb.next();
		}
		Graph g = new Graph(M);
		for(int i=0;i<N;i++) {
			String a = kb.next();
			String b = kb.next();
			int a1 = 0;
			int b1 = 0;
			for(int j=0 ;j < s.length;j++) {
				if(s[j].equals(a)) {
					a1=j;
				}
				if(s[j].equals(b)) {
					b1=j;
				}
			}
			g.addEdge(a1, b1);
		}
		for(int i=0;i<P;i++) {
			int num = kb.nextInt();
			String s1 = kb.next();
			String s2 = kb.next();
			int a1=0;
			int b1=0;
			for(int j=0 ;j < s.length;j++) {
				if(s[j].equals(s1)) {
					a1=j;
				}
				if(s[j].equals(s2)) {
					b1=j;
				}
			}
			BreadthFirstPaths bfp = new BreadthFirstPaths(g,a1);
			
			print(bfp,num,b1,s1,s2);
			
			
		}

	}
	public static void print(BreadthFirstPaths bfp,int num,int b1,String s1, String s2) {
		if(bfp.hasPathTo(b1)) {
			System.out.println(s1+" "+s2+" "+(bfp.distTo(b1)*(num*1128)));
		}else {
			System.out.println("NO SHIPMENT POSSIBLE");
		}
	}

}
